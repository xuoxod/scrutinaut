#!/bin/bash
# filepath: /home/emhcet/private/projects/desktop/java/scrutinaut/upgrade-java-pom.sh

set -euo pipefail

PROJECT_ROOT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
JAVA_FRONTEND_DIR_NAME="java_frontend"
SRC_TEST_ROOT="${PROJECT_ROOT_DIR}/${JAVA_FRONTEND_DIR_NAME}/src/test/java"
CUSTOM_POM_PATH="${PROJECT_ROOT_DIR}/custom-pom.xml"

# List of custom test files (add more as needed)
CUSTOM_TEST_FILES=(
    "custom-ScrutinautAppTest.java"
    "custom-UrlInterrogatorTest.java"
)

TARGET_POM_PATH="${PROJECT_ROOT_DIR}/${JAVA_FRONTEND_DIR_NAME}/pom.xml"
timestamp=$(date +%Y%m%d%H%M%S)
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
CYAN='\033[0;36m'
NC='\033[0m'

echo -e "${CYAN}--- Scrutinaut: Upgrade Java Project ---${NC}"

# --- Upgrade pom.xml ---
if [[ ! -f "$CUSTOM_POM_PATH" ]]; then
    echo -e "${RED}Custom pom.xml not found at $CUSTOM_POM_PATH. Aborting.${NC}"
    exit 1
fi
if [[ ! -d "${PROJECT_ROOT_DIR}/${JAVA_FRONTEND_DIR_NAME}" ]]; then
    echo -e "${RED}Java frontend directory not found. Run setup.sh first.${NC}"
    exit 1
fi
if [[ -f "$TARGET_POM_PATH" ]]; then
    cp "$TARGET_POM_PATH" "${TARGET_POM_PATH}.bak.$timestamp"
    echo -e "${YELLOW}Backed up pom.xml to ${TARGET_POM_PATH}.bak.$timestamp${NC}"
fi
cp "$CUSTOM_POM_PATH" "$TARGET_POM_PATH"
echo -e "${GREEN}pom.xml upgraded.${NC}"

# --- Rename App.java to ScrutinautApp.java and update class name if needed ---
MAIN_SRC_DIR="${PROJECT_ROOT_DIR}/${JAVA_FRONTEND_DIR_NAME}/src/main/java"
APP_JAVA_PATH=$(find "$MAIN_SRC_DIR" -type f -name "App.java" | head -n 1)
if [[ -n "$APP_JAVA_PATH" ]]; then
    SCRUTINAUT_APP_PATH="${APP_JAVA_PATH%/*}/ScrutinautApp.java"
    cp "$APP_JAVA_PATH" "${APP_JAVA_PATH}.bak.$timestamp"
    mv "$APP_JAVA_PATH" "$SCRUTINAUT_APP_PATH"
    # Update class name in the file
    sed -i 's/\bclass App\b/class ScrutinautApp/' "$SCRUTINAUT_APP_PATH"
    # Optionally, ensure the package line is correct (replace with your canonical package if needed)
    PACKAGE_LINE=$(grep '^package ' "$SCRUTINAUT_APP_PATH" | head -n 1)
    if [[ -z "$PACKAGE_LINE" ]]; then
        sed -i "1i package com.gmail.xuoxod.scrutinaut;\n" "$SCRUTINAUT_APP_PATH"
    fi
    printf "\n\t\t[UPGRADE] Renamed App.java to ScrutinautApp.java and updated class name in:\n\t\t%s\n\n" "$SCRUTINAUT_APP_PATH"
else
    printf "\n\t\t[INFO] No App.java found to rename in main source tree.\n\n"
fi

# --- Ensure test root exists ---
mkdir -p "$SRC_TEST_ROOT"

# --- Upgrade custom test files ---
for CUSTOM_FILE in "${CUSTOM_TEST_FILES[@]}"; do
    if [[ -f "$PROJECT_ROOT_DIR/$CUSTOM_FILE" ]]; then
        # Extract class name from file (assumes class name matches file name minus 'custom-' prefix)
        CLASS_FILE="$(echo "$CUSTOM_FILE" | sed 's/^custom-//')"
        # Find the correct target path for this class file
        TARGET_PATH=$(find "$SRC_TEST_ROOT" -type d -print0 | xargs -0 -I{} find {} -maxdepth 1 -type f -name "$CLASS_FILE" 2>/dev/null | head -n 1)
        # If not found, use the main package directory (from your setup)
        if [[ -z "$TARGET_PATH" ]]; then
            # Try to infer package from custom file
            PACKAGE_LINE=$(grep '^package ' "$PROJECT_ROOT_DIR/$CUSTOM_FILE" | head -n 1 | awk '{print $2}' | tr -d ';')
            PACKAGE_PATH="${PACKAGE_LINE//.//}"
            TARGET_DIR="$SRC_TEST_ROOT/$PACKAGE_PATH"
            mkdir -p "$TARGET_DIR"
            TARGET_PATH="$TARGET_DIR/$CLASS_FILE"
        fi
        # Backup if exists
        if [[ -f "$TARGET_PATH" ]]; then
            cp "$TARGET_PATH" "${TARGET_PATH}.bak.$timestamp"
            echo -e "${YELLOW}Backed up $CLASS_FILE to ${TARGET_PATH}.bak.$timestamp${NC}"
        fi
        cp "$PROJECT_ROOT_DIR/$CUSTOM_FILE" "$TARGET_PATH"
        echo -e "${GREEN}$CLASS_FILE upgraded.${NC}"
    else
        echo -e "${YELLOW}Custom test file $CUSTOM_FILE not found. Skipping.${NC}"
    fi
done

# --- Remove all Maven archetype's default AppTest.java files (JUnit 3 style) ---
echo -e "${CYAN}Searching for and removing all AppTest.java files generated by Maven archetype...${NC}"
find "$SRC_TEST_ROOT" -type f -name "AppTest.java" -print -exec rm -f {} \; \
    -exec echo -e "${YELLOW}Removed: {}${NC}" \;

# --- Show diff for pom.xml if backup exists ---
if [[ -f "${TARGET_POM_PATH}.bak.$timestamp" ]]; then
    if command -v colordiff &>/dev/null; then
        echo -e "${CYAN}Diff for pom.xml:${NC}"
        colordiff -u "${TARGET_POM_PATH}.bak.$timestamp" "$TARGET_POM_PATH" || true
    elif command -v diff &>/dev/null; then
        echo -e "${CYAN}Diff for pom.xml:${NC}"
        diff -u "${TARGET_POM_PATH}.bak.$timestamp" "$TARGET_POM_PATH" || true
    fi
fi

# --- Validate pom.xml if xmllint is available ---
if command -v xmllint &>/dev/null; then
    echo -e "${CYAN}Validating new pom.xml with xmllint...${NC}"
    if xmllint --noout "$TARGET_POM_PATH"; then
        echo -e "${GREEN}pom.xml is well-formed XML.${NC}"
    else
        echo -e "${RED}pom.xml is NOT valid XML! Please check your custom-pom.xml.${NC}"
        exit 1
    fi
else
    echo -e "${YELLOW}xmllint not found. Skipping XML validation.${NC}"
fi

echo -e "${GREEN}Upgrade complete!${NC}"
echo -e "${CYAN}Upgraded:${NC}"
echo -e "  - pom.xml"
# --- Upgrade custom test files ---
for CUSTOM_FILE in "${CUSTOM_TEST_FILES[@]}"; do
    if [[ -f "$PROJECT_ROOT_DIR/$CUSTOM_FILE" ]]; then
        CLASS_FILE="$(echo "$CUSTOM_FILE" | sed 's/^custom-//')"
        # Find the correct target path for this class file
        TARGET_PATH=$(find "$SRC_TEST_ROOT" -type d -print0 | xargs -0 -I{} find {} -maxdepth 1 -type f -name "$CLASS_FILE" 2>/dev/null | head -n 1)
        if [[ -z "$TARGET_PATH" ]]; then
            PACKAGE_LINE=$(grep '^package ' "$PROJECT_ROOT_DIR/$CUSTOM_FILE" | head -n 1 | awk '{print $2}' | tr -d ';')
            PACKAGE_PATH="${PACKAGE_LINE//.//}"
            TARGET_DIR="$SRC_TEST_ROOT/$PACKAGE_PATH"
            mkdir -p "$TARGET_DIR"
            TARGET_PATH="$TARGET_DIR/$CLASS_FILE"
        fi
        printf "\n\t\t[UPGRADE] Copying %s to:\n\t\t%s\n\n" "$CUSTOM_FILE" "$TARGET_PATH"
        # Backup if exists
        if [[ -f "$TARGET_PATH" ]]; then
            cp "$TARGET_PATH" "${TARGET_PATH}.bak.$timestamp"
            printf "\n\t\t[BACKUP] Backed up %s to:\n\t\t%s.bak.%s\n\n" "$CLASS_FILE" "$TARGET_PATH" "$timestamp"
        fi
        cp "$PROJECT_ROOT_DIR/$CUSTOM_FILE" "$TARGET_PATH"
        printf "\n\t\t[UPGRADE] %s upgraded at:\n\t\t%s\n\n" "$CLASS_FILE" "$TARGET_PATH"
    else
        printf "\n\t\t[SKIP] Custom test file %s not found. Skipping.\n\n" "$CUSTOM_FILE"
    fi
done

# --- Remove all Maven archetype's default AppTest.java files (JUnit 3 style) ---
echo -e "${CYAN}Searching for and removing all AppTest.java files generated by Maven archetype...${NC}"
find "$SRC_TEST_ROOT" -type f -name "AppTest.java" -print | while read -r found; do
    printf "\n\t\t[REMOVE] Found AppTest.java at:\n\t\t%s\n\n" "$found"
    rm -f "$found"
    printf "\n\t\t[REMOVE] Removed:\n\t\t%s\n\n" "$found"
done